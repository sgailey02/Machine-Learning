# -*- coding: utf-8 -*-
"""TensorflowPredictions

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U9jAO7K2-9ilRae48ioBO6OpGlFOtMy4
"""

#this program train test/data sets to predict the weight of someone who's height is inputted
import tensorflow.compat.v1 as tf
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

  #from tensorflow import keras layers and disable 
from tensorflow.keras import layers
tf.disable_v2_behavior()

  #Check TensorFlow version
print(tf.__version__)

  #Extract url
url = 'https://raw.githubusercontent.com/gheniabla/datasets/master/height-weight.csv'
  #Seperate data from column labels
raw_dataset = pd.read_csv(url, sep=',')
x_set = raw_dataset.Height
y_set = raw_dataset.Weight
  #Split Test and Train data set at 10%
xtrain_set = x_set.sample(frac = 0.9, random_state = 0)
xtest_set = x_set.drop(xtrain_set.index)
ytrain_set = y_set.sample(frac = 0.9, random_state = 0)
ytest_set = y_set.drop(ytrain_set.index)
  #Fit to a tensorflow keras model
height_model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])
  #set optimized laerning rate at 10%
height_model.compile(optimizer=tf.train.AdamOptimizer(learning_rate=0.1), loss='mean_absolute_error')
  #fit to data and set epochs
height_model.fit(np.array(x_set), np.array(y_set), batch_size=32, epochs=75)
  #print out model back-end summary
height_model.summary()
  #Make a prediction for Weight(kg) if Height(cm) = 164
print("\n**************PREDICTION**************\n")
print(height_model.predict([164]))
print("\n\n")